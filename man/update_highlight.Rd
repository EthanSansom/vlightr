% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/highlight.R
\name{update_highlight}
\alias{update_highlight}
\title{Update a highlighted vector's format method}
\usage{
update_highlight(
  x,
  conditions,
  formatters,
  description,
  precedence,
  format_once,
  init_formatter,
  last_formatter
)
}
\arguments{
\item{x}{\verb{[vlightr_highlight]}

A highlighted vector to update.}
}
\description{
\code{update_highlight()} sets any of the \code{conditions},
\code{formatters}, \code{description}, \code{precedence}, \code{format_once}, \code{init_formatter},
or \code{last_formatter} attributes in an already highlighted vector and validates
the result.

Updated attributes must conform to the existing attributes. For example, a
supplied list of \code{conditions} functions must be the same length as the
existing \code{formatters} attribute of \code{x}.
}
\examples{
dummies <- c(1L, 0L, NA, 0L, 1L)
dummies_hl <- highlight_case(
  x = dummies,
  .x == 0 ~ paste(.x, "[No]"),
  .x == 1 ~ paste(.x, "[Yes]"),
  TRUE ~ "Don't Know"
)
print(dummies_hl)
describe_highlight(dummies_hl)

# Add a `description` and `last_formatter`
dummies_hl <- update_highlight(
  x = dummies_hl,
  description = c("Set 0 to No", "Set 1 to Yes", " Otherwise, Don't Know"),
  last_formatter = background("bright_yellow")
)
print(dummies_hl)
describe_highlight(dummies_hl)

# Change the `formatters` and remove the `init_formatter`
update_highlight(
  x = dummies_hl,
  formatters = list(~ "No", ~ "Yes", color("red")),
  last_formatter = NULL
)
}
\seealso{
Other attribute setters: 
\code{\link{attr-setters}}
}
\concept{attribute setters}
